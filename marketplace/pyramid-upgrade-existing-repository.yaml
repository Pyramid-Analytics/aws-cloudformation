AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Upgrades an existing Pyramid deployment.

  Pre-requisites:
  1 - backing up deployment repository and EFS volume to s3
    pyramid-backup-repository-to-s3.yaml

  Process:
  1 - creating a new repository database and EFS volume
  2 - Restore backup to the new repository database and EFS
  2 - removing server_instances (and logs?) from new repository database
    option in pyramid-restore-repository-from-s3.yaml
  3 - running pyramid-central-existing-repository with the new repository database, which will be upgraded
    pyramid-central-existing-repository.yaml
    create new repository is false
    has to deal with central IMDB
    creates new SSM and Secret Manager values
  4 - create new additional IMDB instances that were in the original deployment
    beyond the central instance IMDB
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: New Pyramid Analytics Central instance
        Parameters:
          - AMIID
          - VPCID
          - Subnet
          - InstanceType
          - KeyPairName
          - HTTPAccessCIDR
          - AllowSSHSecurityGroup
      - Label:
          default: Existing Repository Database Service
        Parameters:
          - RDSAddress
          - RDSPort
          - RDSUser
          - RDSPassword
          - RDSName
      - Label:
          default: Deployment being upgraded from
        Parameters:
          - BackupS3BucketAndFolder
          - InitializeRepository
          - InitialUsername
          - InitialUserPassword
    ParameterLabels:
      BackupS3BucketAndFolder:
        default: S3 path to a Pyramid backup
      RDSAddress:
        default: Existing PostgreSQL RDS domain name
      RDSPort:
        default: RDS database port
      RDSUser:
        default: RDS database user name
      RDSPassword:
        default: RDS database password
      RDSName:
        default: Repository database name
      KeyPairName:
        default: Key pair name
      AMIID:
        default: Pyramid Analytics AMI ID
      VPCID:
        default: VPC ID
      Subnet:
        default: Subnet for Pyramid instance
      InstanceType:
        default: Instance type
      HTTPAccessCIDR:
        default: HTTP/HTTPS CIDR
      AllowSSHSecurityGroup:
        default: SSH Security Group ID
      InitializeRepository:
        default: Initialize Repository?
      InitialUsername:
        default: Initial Pyramid user name
      InitialUserPassword:
        default: Initial Pyramid User password
Parameters:
  BackupS3BucketAndFolder:
    Description: >-
      S3 path to a Pyramid backup
    Type: String
    MinLength: '5'
    MaxLength: '1000'
    AllowedPattern: '[a-zA-Z][-_a-zA-Z0-9/\=()]*'
    ConstraintDescription: >-
      Min 5 characters. First character must be a letter. Must contain only letters, digits, '/', '-', '_', '=', '*' or parentheses.
  KeyPairName:
    Description: Name of an existing EC2 key pair for SSH connections.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Required
  VPCID:
    Description: ID of your existing VPC for deployment.
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: Required
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      Allowed CIDR block for HTTP and HTTPS traffic. Please set CIDR to
      x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all
      IP addresses access, or another CIDR range.
    Type: String
    MinLength: '9'
  Subnet:
    Description: Subnet for instance. Accessible by HTTP/S from browsers.
    Type: 'AWS::EC2::Subnet::Id'
  InstanceType:
    Description: >-
      Amazon EC2 instance type for the Pyramid instance. Has to be available for
      the deployment region.
    Type: String
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.8xlarge
      - c5.12xlarge
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.8xlarge
      - c5n.12xlarge
    Default: c5.4xlarge
    ConstraintDescription: Must be a valid instance type for region.
  HTTPAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      Allowed CIDR block for HTTP and HTTPS traffic. Please set CIDR to
      x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all
      IP addresses access, or another CIDR range.
    Type: String
    MinLength: '9'
  AllowSSHSecurityGroup:
    Description: >-
      Optional. ID of the security group (e.g. sg-0fec99734449e8888) to allow SSH access into the instance ie. Bastion
      access.
    Type: String
    Default: ''
    MaxLength: '128'
    AllowedPattern: '^$|sg-[a-f0-9]{6,17}$'
  RDSAddress:
    Description: >-
      Domain name of exisitng PostgreSQL RDS service (ie. pyramid.cluster-cfave2vnma46.us-east-1.rds.amazonaws.com)
    Type: String
    MinLength: '5'
    MaxLength: '128'
    AllowedPattern: '[a-zA-Z][-_a-zA-Z0-9\.]*'
    ConstraintDescription: >-
      Min 5 characters. First character must be a letter. Must contain only letters, digits, '.', '-' or underscores.
  RDSUser:
    Description: >-
      Master user name for the RDS database. Min 5 characters. It can contain
      only alphanumeric characters and underscores.
    Type: String
    MinLength: '5'
    MaxLength: '64'
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 5 characters. Can contain only alphanumeric characters, minus and
      underscores.
  RDSPassword:
    Description: >-
      Master password for the RDS database. Min 8 characters. Can contain only
      alphanumeric characters, minus and underscores.
    Type: String
    MinLength: '8'
    MaxLength: '64'
    NoEcho: 'true'
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 8 characters. Can contain only alphanumeric characters, minus and
      underscores.
  RDSPort:
    Description: RDS Port
    Type: Number
    Default: '5432'
    MinValue: '1024'
    ConstraintDescription: Port number must be higher than 1024
  RDSName:
    Description: Repository database name in the RDS service.
    Type: String
    Default: pyramid
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][-_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 6 characters. Must begin with a letter and contain only alphanumeric
      characters, minus and underscores.
  InitializeRepository:
    Description: Initialize Pyramid Repository database name. false assumes database name exists
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  InitialUsername:
    ConstraintDescription: >-
      Min 5 characters. Must begin with a letter and contain only alphanumeric
      characters.
    Default: admin
    Description: The Pyramid initial username.
    MaxLength: '16'
    MinLength: '5'
    Type: String
    AllowedPattern: '^[a-zA-Z][-_a-zA-Z0-9]*$'
  InitialUserPassword:
    AllowedPattern: '^(?=^.{8,255}$)[a-zA-Z][-_a-zA-Z0-9]*$'
    ConstraintDescription: >-
      Min 8 characters. Must begin with a letter and contain only alphanumeric
      characters, minus and underscore.
    Description: >-
      The Pyramid initial user password. Min 8 characters. Must begin with a
      letter and contain only alphanumeric characters, minus and underscore.
    MaxLength: '64'
    MinLength: '8'
    NoEcho: 'True'
    Type: String
Rules:
  SubnetsNotEmpty:
    Assertions:
      - Assert: !Not 
          - 'Fn::EachMemberEquals':
              - 'Fn::RefAll': 'AWS::EC2::Subnet::Id'
              - ''
        AssertDescription: All subnet parameters must not be empty
  KeyPairsNotEmpty:
    Assertions:
      - Assert: !Not 
          - 'Fn::EachMemberEquals':
              - 'Fn::RefAll': 'AWS::EC2::KeyPair::KeyName'
              - ''
        AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
      - Assert:
          'Fn::EachMemberIn':
            - 'Fn::ValueOfAll':
                - 'AWS::EC2::Subnet::Id'
                - VpcId
            - 'Fn::RefAll': 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must be in the same VPC

Resources:
  PyramidRestoreRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: PyramidRestorePolicy
          PolicyDocument:
            Statement:
              - Sid: InstanceLogs
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:pyramid/${BaseStackName}
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:pyramid/${BaseStackName}:log-stream:*
              # - Sid: SecretsManagerGet
              #   Effect: Allow
              #   Action:
              #     - 'secretsmanager:GetSecretValue'
              #   Resource:
              #     - !Sub >-
              #       arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/Pyramid/${BaseStackName}/*
              # - Sid: SSMGetParameters
              #   Effect: Allow
              #   Action:
              #     - 'ssm:GetParameter'
              #     - 'ssm:GetParameters'
              #     - 'ssm:GetParametersByPath'
              #   Resource:
              #     - !Sub >-
              #       arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Pyramid/${BaseStackName}/*
              #     - !Sub >-
              #       arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Pyramid/${BaseStackName}
              - Sid: DescribeSubnets
                Effect: Allow
                Action:
                  - 'ec2:DescribeSubnets'
                Resource: '*'
              - Sid: S3
                Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Join
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':s3:::'
                      - !Ref BackupS3BucketAndFolder
                      - '/*'
                  - !Join
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':s3:::'
                      - !Ref BackupS3BucketAndFolder

  PyramidRestoreInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref PyramidRestoreRole

  SharedFileSystem:
    Type: 'AWS::EFS::FileSystem'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-Pyramid-SharedFileSystem'
      FileSystemPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: Allow administration
            Effect: "Allow"
            Action:
              - "elasticfilesystem:Client*"
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${PyramidRole}'
      KmsKeyId: !GetAtt SharedFileSystemKey.Arn

  SharedFileSystemKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id:  !Sub '${AWS::StackName}-pyramid-shared-fs-key'
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'


  CIDRofVPCLambda:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://pyramid-cloudformation.s3.amazonaws.com/marketplace/2020-13-update-1/pyramid-cidr-lambda.yaml
      Parameters:
        BaseStackName: !Ref 'AWS::StackName'
  
  CidrOfVpc:
    Type: 'Custom::CidrOfVpcLambda'
    Properties:
      ServiceToken: !GetAtt CIDRofVPCLambda.Outputs.CIDRofVPCARN
      VpcId: !Ref VPCID
      Region: !Ref 'AWS::Region'

  CentralInstance:
    Type: 'AWS::CloudFormation::Stack'
    DependsOn: CIDRofVPCLambda
    Properties:
      TemplateURL: >-
        https://pyramid-cloudformation.s3.amazonaws.com/marketplace/2020-13-update-1/pyramid-central-instance.yaml
      Parameters:
        AMIID: !Ref AMIIID
        BaseStackName: !Ref 'AWS::StackName'
        InstanceType: !Ref InstanceType
        VPCID: !Ref VPCID
        Subnet: !Ref Subnet
        VPCCIDR: !GetAtt CidrOfVpc.CidrBlock
        KeyPairName: !Ref KeyPairName
        HTTPAccessCIDR: !Ref HTTPAccessCIDR
        AllowSSHSecurityGroup: !Ref AllowSSHSecurityGroup
        InitialUsername: !Ref InitialUsername
        InitialUserPassword: !Ref InitialUserPassword
        RDSAddress: !Ref RDSAddress
        RDSPort: !Ref RDSPort
        RDSName: !Ref RDSName
        RDSUser: !Ref RDSUser
        RDSPassword: !Ref RDSPassword
        InitializeRepository: !Ref InitializeRepository

Outputs:
  PyramidPublicURL:
    Value: !GetAtt CentralInstance.Outputs.PyramidPublicURL
    Description: Pyramid Public URL
    # Export:
    #   Name: !Sub '${BaseStackName}-Pyramid-Public-URL'
  PrivateDNSName:
    Value: !GetAtt CentralInstance.Outputs.PrivateDNSName
    Description: Instance Private DNS name
  PublicDNSName:
    Value: !GetAtt CentralInstance.Outputs.PublicDNSName
    Description: Instance Public DNS name
  VPC:
    Value: !Ref VPCID
    Description: VPC for deployment
    # Export:
    #   Name: !Sub '${BaseStackName}-VPCID'
  KeyPairName:
    Value: !Ref KeyPairName
    Description: Key Pair for instances
    # Export:
    #   Name: !Sub '${BaseStackName}-KeyPairName'
  PyramidProcessesSecurityGroup:
    Value: !GetAtt CentralInstance.Outputs.PyramidProcessesSecurityGroup
    Description: Security Group for Pyramid instances' internal communication
    # Export:
    #   Name: !Sub '${BaseStackName}-PyramidProcessesSecurityGroup'
  PyramidRole:
    Value: !GetAtt CentralInstance.Outputs.PyramidRole
    Description: IAM Role for instances launched from this stack
    # Export:
    #   Name: !Sub '${BaseStackName}-PyramidRole'
  PyramidInstanceProfile:
    Value: !GetAtt CentralInstance.Outputs.PyramidInstanceProfile
    Description: IAM Instance Profile for instances launched from this stack
    # Export:
    #   Name: !Sub '${BaseStackName}-PyramidInstanceProfile'
  MountTargetSecurityGroup:
    Value: !GetAtt CentralInstance.Outputs.MountTargetSecurityGroup
    Description: Security Group for EFS Mount Targets
    # Export:
    #   Name: !Sub '${BaseStackName}-MountTargetSecurityGroup'
  IMDBFileSystem:
    Value: !GetAtt CentralInstance.Outputs.IMDBFileSystem
    Description: EFS file system ID for the In-Memory database
    # Export:
    #   Name: !Sub '${BaseStackName}-IMDBFileSystem'
  SharedFileSystem:
    Value: !GetAtt CentralInstance.Outputs.SharedFileSystem
    Description: EFS file system ID for the shared file system across the deployment
    # Export:
    #   Name: !Sub '${BaseStackName}-SharedFileSystem'
  RepositoryDatabaseAddress:
    Value: !Ref RDSAddress
    Description: Repository database address
    # Export:
    #   Name: !Sub '${BaseStackName}-RDSAddress'
  RepositoryDatabasePort:
    Value: !Ref RDSPort
    Description: Repository database port
    # Export:
    #   Name: !Sub '${BaseStackName}-RDSPort'
  RepositoryDatabaseUsername:
    Value: !Ref RDSUser
    Description: Repository database user name
    # Export:
    #   Name: !Sub '${BaseStackName}-RDSUser'
  RepositoryDatabasePasswordARN:
    Value: !GetAtt CentralInstance.Outputs.RepositoryDatabasePasswordARN
    Description: RDS Password in Secrets Manager
    # Export:
    #   Name: !Sub '${BaseStackName}-RDSPassword-Secret-ARN'
  RepositoryDatabaseName:
    Value: !Ref RDSName
    Description: Repository database schema name
    # Export:
    #   Name: !Sub '${BaseStackName}-RDSName'
  InitialUsername:
    Value: !Ref InitialUsername
    Description: Initial Pyramid user name
    # Export:
    #   Name: !Sub '${BaseStackName}-InitialUsername'
  InitialUserPassword:
    Value: !Ref InitialUserPassword
    Description: Initial Pyramid user password
    # Export:
    #   Name: !Sub '${BaseStackName}-InitialUserPassword'
