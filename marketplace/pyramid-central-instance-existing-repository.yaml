AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Deploys a single instance of Pyramid 2020 with all services and a new RDS 
  instance for the repository database. To be deployed in a public
  subnet, as the Pyramid web server is available on port 80. You will be billed
  for the AWS resources used if you create a stack from this template. 
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Pyramid Analytics Instance
        Parameters:
          - VPCID
          - Subnet
          - InstanceType
          - KeyPairName
          - AssignPublicIP
          - HTTPAccessCIDR
          - AllowSSHSecurityGroup
          - InitialUsername
          - InitialUserPassword
          - FileUploadSize
      - Label:
          default: Existing Repository Database Service and File system
        Parameters:
          - RDSDeploymentType
          - RDSAddress
          - RDSPort
          - RDSUsername
          - RDSPassword
          - RDSName
          - RDSSecurityGroup
      - Label:
          default: Repository and file system initialization
        Parameters:
          - BackupS3Bucket
          - BackupS3Folder
          - InitializeRepository
          - ExistingFileSystemId
    ParameterLabels:
      KeyPairName:
        default: Key pair name
      VPCID:
        default: VPC ID
      Subnet:
        default: Subnet for Pyramid instance
      InstanceType:
        default: Instance type
      AssignPublicIP:
        default: Assign public IP and domain name
      HTTPAccessCIDR:
        default: HTTP/HTTPS CIDR
      AllowSSHSecurityGroup:
        default: SSH Security Group ID
      RDSDeploymentType:
        default: Database type
      RDSAddress:
        default: Existing RDS domain name
      RDSPort:
        default: RDS database port
      RDSUsername:
        default: RDS database user name
      RDSPassword:
        default: RDS database password
      RDSName:
        default: Repository database name
      RDSSecurityGroup:
        default: Security group for access to Repository database service
      ExistingFileSystemId:
        default: Existing File system Id if not initializing or restoring
      InitializeRepository:
        default: Initialize Repository database?
      InitialUsername:
        default: Initial Pyramid user name
      InitialUserPassword:
        default: Initial Pyramid User password
      FileUploadSize:
        default: File upload size setting for nginx web server (MB)
      BackupS3Bucket:
        default: S3 bucket containing a Pyramid backup
      BackupS3Folder:
        default: Path under S3 bucket to a Pyramid backup
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 key pair for SSH connections.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Required
  VPCID:
    Description: ID of your existing VPC for deployment.
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: Required
  Subnet:
    Description: Subnet for instance. Accessible by HTTP/S from browsers.
    Type: 'AWS::EC2::Subnet::Id'
  InstanceType:
    Description: >-
      Amazon EC2 instance type for the Pyramid instance. Has to be available for
      the deployment region.
    Type: String
    AllowedValues:
      - t3.2xlarge
      - t3a.2xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.8xlarge
      - c5.12xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.8xlarge
      - c5n.12xlarge
    Default: c5.4xlarge
    ConstraintDescription: Must be a valid instance type for region.
  AssignPublicIP:
    Description: >-
      Assign public IP address and domain.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Required
  HTTPAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      Allowed CIDR block for HTTP and HTTPS traffic. Please set CIDR to
      x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all
      IP addresses access, or another CIDR range.
    Type: String
    MinLength: '9'
  AllowSSHSecurityGroup:
    Description: >-
      Optional. ID of the security group (e.g. sg-0fec99734449e8888) to allow SSH access into the instance ie. Bastion
      access.
    Type: String
    Default: ''
    MaxLength: '128'
    AllowedPattern: '^$|sg-[a-f0-9]{6,17}$'
  RDSDeploymentType:
    Description: Database type
    Type: String
    Default: PostgreSQL
    AllowedValues:
      - PostgreSQL
      - MicrosoftSQLServer
  RDSAddress:
    Description: >-
      Domain name of exisitng RDS service (ie. pyramid.cluster-cfave2vnma46.us-east-1.rds.amazonaws.com)
    Type: String
    MinLength: '5'
    MaxLength: '128'
    AllowedPattern: '[a-zA-Z][-_a-zA-Z0-9\.]*'
    ConstraintDescription: >-
      Min 5 characters. First character must be a letter. Must contain only letters, digits, '.', '-' or underscores.
  RDSUsername:
    Description: >-
      Master user name for the RDS database. Min 5 characters. It can contain
      only alphanumeric characters and underscores.
    Type: String
    MinLength: '5'
    MaxLength: '64'
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 5 characters. Can contain only alphanumeric characters, minus and
      underscores.
  RDSPassword:
    Description: >-
      Master password for the RDS database. Min 8 characters. Can contain only
      alphanumeric characters, minus and underscores.
    Type: String
    MinLength: '8'
    MaxLength: '64'
    NoEcho: 'true'
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 8 characters. Can contain only alphanumeric characters, minus and
      underscores.
  RDSPort:
    Description: RDS Port. Standards are 5432 for PostgreSQL and 1433 for Microsft SQL Server.
    Type: Number
    MinValue: '1024'
    ConstraintDescription: Port number must be higher than 1024
  RDSName:
    Description: Repository database name in the RDS service.
    Type: String
    Default: pyramid
    MinLength: '6'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][_a-zA-Z0-9]*'
    ConstraintDescription: >-
      Min 6 characters. Must begin with a letter and contain only alphanumeric
      characters and underscores.
  ExistingFileSystemId:
    Description: >-
      For reusing an existing file system for Pyramid combined with an existing repository database.
    Type: String
    Default: ''
    AllowedPattern: '^$|fs-[a-f0-9]{8}'
    ConstraintDescription: >-
      Optional. EFS ID like fs-9554b161.
  InitializeRepository:
    Description: If not restoring from backup, initialize Pyramid Repository database name. false assumes database name exists
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  RDSSecurityGroup:
    Description: Security Group for access into RDS service.
    Type: 'AWS::EC2::SecurityGroup::Id'
  InitialUsername:
    ConstraintDescription: >-
      Min 5 characters. Must begin with a letter and contain only alphanumeric
      characters.
    Default: admin
    Description: The Pyramid initial username.
    MaxLength: '16'
    MinLength: '5'
    Type: String
    AllowedPattern: '^[a-zA-Z][-_a-zA-Z0-9]*$'
  InitialUserPassword:
    AllowedPattern: '^(?=^.{8,255}$)[a-zA-Z][-_a-zA-Z0-9]*$'
    ConstraintDescription: >-
      Min 8 characters. Must begin with a letter and contain only alphanumeric
      characters, minus and underscore.
    Description: >-
      The Pyramid initial user password. Min 8 characters. Must begin with a
      letter and contain only alphanumeric characters, minus and underscore.
    MaxLength: '64'
    MinLength: '8'
    NoEcho: 'True'
    Type: String
  FileUploadSize:
    Description: >-
      File upload size setting for nginx (MB).
    Type: Number
    Default: 200
    MinValue: 200
    ConstraintDescription: Must be more than 200 (MB).
  BackupS3Bucket:
    Description: >-
      S3 bucket to a Pyramid backup
    Type: String
    Default: ''
    MaxLength: '1000'
    AllowedPattern: '^$|^(?=^.{5,1000}$)[a-zA-Z][-_a-zA-Z0-9\=()]*$'
    ConstraintDescription: >-
      Optional. Otherwise min 5 characters. First character must be a letter. Must contain only letters, digits, '-', '_', '=' or parentheses.
  BackupS3Folder:
    Description: >-
      Path within S3 bucket to a Pyramid backup
    Type: String
    Default: ''
    MaxLength: '1000'
    AllowedPattern: '^$|^(?=^.{5,1000}$)[a-zA-Z0-9][-_a-zA-Z0-9\/\=()+]*$'
    ConstraintDescription: >-
      Optional. Otherwise min 5 characters. First character must be a letter or number. Must contain only letters, digits, '/', '-', '+', '_', '=' or parentheses.

Mappings:

# 2020.27.113 AWS version

  AWSAMIRegionMap:
    us-east-1:
      '64': ami-099e86a36f1db389c
    us-east-2:
      '64': ami-07563837b3ea7594a
    us-gov-west-1:
      '64': ami-0a3215fab4f694301
    us-gov-east-1:
      '64': ami-0e5d964eb4ac20dae    
    us-west-1:
      '64': ami-0d009730e662978c5
    us-west-2:
      '64': ami-02b4c9fbf2abf59eb
    ca-central-1:
      '64': ami-0df97e39ded0e86b5
    eu-central-1:
      '64': ami-064a5e95ccb7dd234
    eu-west-1:
      '64': ami-070bd11ca1c8bc412
    eu-west-2:
      '64': ami-0d98d1906d2c5d2fe
    eu-west-3:
      '64': ami-0f2a7f1ef4a83bbe6
    ap-southeast-1:
      '64': ami-086a71d9281ac248b
    ap-southeast-2:
      '64': ami-0751377fa40031a70
    ap-south-1:
      '64': ami-06b0505d7d7f48057
    ap-northeast-1:
      '64': ami-01653aa3e2a56ec20
    ap-northeast-2:
      '64': ami-0b5f87041dc68a13b
    sa-east-1:
      '64': ami-08d9f92e3348ce614
    eu-north-1:
      '64': ami-02f9e01e943afa458
    me-south-1:
      '64': ami-0d5e76c448971f8d0
    af-south-1:
      '64': ami-0af010a0671a49317
    eu-south-1:
      '64': ami-03a46b5201ee64538
    ap-east-1:
      '64': ami-03597eb3e8c2398ee
    ap-northeast-3:
      '64': ami-08ffaef3303b5b13e

Rules:
  SubnetsNotEmpty:
    Assertions:
      - Assert: !Not 
          - 'Fn::EachMemberEquals':
              - 'Fn::RefAll': 'AWS::EC2::Subnet::Id'
              - ''
        AssertDescription: All subnet parameters must not be empty
  KeyPairsNotEmpty:
    Assertions:
      - Assert: !Not 
          - 'Fn::EachMemberEquals':
              - 'Fn::RefAll': 'AWS::EC2::KeyPair::KeyName'
              - ''
        AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
      - Assert:
          'Fn::EachMemberIn':
            - 'Fn::ValueOfAll':
                - 'AWS::EC2::Subnet::Id'
                - VpcId
            - 'Fn::RefAll': 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must be in the same VPC

Conditions:
  DatabaseTypeIsMicrosoft: !Equals
    - !Ref RDSDeploymentType
    - 'MicrosoftSQLServer'
  PublicIP: !Equals
    - !Ref AssignPublicIP
    - 'true'
  RestoreFromBackup: !Not 
    - !Equals 
      - !Ref BackupS3Bucket
      - ''
  DontInitializeRepository: !Or
    - !Condition RestoreFromBackup
    - !Equals
      - !Ref InitializeRepository
      - 'false'


Resources:
  NetworkTestStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://pyramid-cloudformation.s3.amazonaws.com/submodules/network-test/network-test.yaml
      Parameters:
        Subnet:
          Ref: Subnet
        BaseStackName:
          Ref: AWS::StackName
        AssignPublicIP:
          Ref: AssignPublicIP
        VPCID:
          Ref: VPCID
        KeyPairName:
          Ref: KeyPairName

  BaseResourcesParameters:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://pyramid-cloudformation.s3.amazonaws.com/templates/pyramid-base-resources-parameters-testing.yaml
      Parameters:
        BaseStackName: !Ref AWS::StackName
        TestInstanceId:
          Fn::GetAtt: NetworkTestStack.Outputs.TestInstanceId
        TestInstanceSG:
          Fn::GetAtt: NetworkTestStack.Outputs.TestInstanceSG
        TestInstanceStack:
          !Select [1, !Split ["/", !Ref NetworkTestStack ]]
        VPCID: !Ref VPCID
        KeyPairName: !Ref KeyPairName
        HTTPAccessCIDR: !Ref HTTPAccessCIDR
        AllowSSHSecurityGroup: !Ref AllowSSHSecurityGroup
        InitialUsername: !Ref InitialUsername
        InitialUserPassword: !Ref InitialUserPassword
        ExistingFileSystemId: !If
          - DontInitializeRepository
          - !Ref ExistingFileSystemId
          - !Ref AWS::NoValue
        FileUploadSize: !Ref FileUploadSize

  RepositoryDatabaseTypeSSM:
    Type: AWS::SSM::Parameter
    DependsOn: BaseResourcesParameters
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabaseType'
      Type: String
      Value: !Ref RDSDeploymentType
      Description: Database type for repository in RDS
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RepositoryDatabaseServiceNameSSM:
    Type: AWS::SSM::Parameter
    DependsOn: BaseResourcesParameters
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabaseServiceName'
      Type: String
      Value:  !Select [ 0, !Split [ ".", !Ref RDSAddress ]]
      Description: RDS service name of repository
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RepositoryDatabaseAddressSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabaseAddress'
      Type: String
      Value: !Ref RDSAddress
      Description: RDS domain of repository
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RepositoryDatabasePortSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabasePort'
      Type: String
      Value: !Ref RDSPort
      Description: Port for repository in RDS
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RepositoryDatabaseUsernameSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabaseUsername'
      Type: String
      Value: !Ref RDSUsername
      Description: User name for repository in RDS
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RDSPasswordSecret:
    Type: 'AWS::SecretsManager::Secret'
    DependsOn: BaseResourcesParameters
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabasePassword'
      Description: Password for RDS service
      SecretString: !Ref RDSPassword
      Tags:
        -
          Key: StackName
          Value: !Ref AWS::StackName
        -
          Key: Vendor
          Value: Pyramid

  RepositoryDatabasePasswordARNSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabasePasswordARN'
      Type: String
      Value: !Ref RDSPasswordSecret
      Description: ARN of repository database password Secret
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  RepositoryDatabaseNameSSM:
    Type: AWS::SSM::Parameter
    DependsOn: BaseResourcesParameters
    Properties:
      Name: !Sub '/Pyramid/${AWS::StackName}/RepositoryDatabaseName'
      Type: String
      Value: !Ref RDSName
      Description: Repository schema name in RDS service
      Tags:
        StackName: !Sub '${AWS::StackName}'
        Vendor: Pyramid

  PyramidProcessesSecurityGroupRepositoryAccess:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref RDSSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref RDSPort
      ToPort: !Ref RDSPort
      SourceSecurityGroupId: !GetAtt BaseResourcesParameters.Outputs.PyramidProcessesSecurityGroupId

  RestoreBackup:
    Type: 'AWS::CloudFormation::Stack'
    Condition: RestoreFromBackup
    DependsOn:
      - PyramidProcessesSecurityGroupRepositoryAccess
    Properties:
      TemplateURL: >-
        https://pyramid-cloudformation.s3.amazonaws.com/marketplace/2020-27/pyramid-backup-restore-s3.yaml
      Parameters:
        BackupRestore: restore
        BaseStackName: !Ref AWS::StackName
        BucketName: !Ref BackupS3Bucket
        BucketFolder: !Ref BackupS3Folder
        Subnet: !Ref Subnet

  CentralInstance:
    Type: 'AWS::CloudFormation::Stack'
    DependsOn:
      - PyramidProcessesSecurityGroupRepositoryAccess
    Properties:
      TemplateURL: >-
        https://pyramid-cloudformation.s3.amazonaws.com/templates/pyramid-single-instance-testing.yaml
      Parameters:
        AMIID: !FindInMap 
          - AWSAMIRegionMap
          - !Ref 'AWS::Region'
          - '64'
        BaseStackName: !Ref AWS::StackName
        TestingStackName:
          !Select [1, !Split ["/", !Ref NetworkTestStack ]]
        PyramidProcess: Everything
        InstancePurpose: CentralInstance
        InstanceType: !Ref InstanceType
        WorkloadSecurityGroups: !Join 
          - ','
          - - !GetAtt BaseResourcesParameters.Outputs.WebAccessSecurityGroup
            - !GetAtt BaseResourcesParameters.Outputs.PyramidProcessesSecurityGroup
            - !GetAtt BaseResourcesParameters.Outputs.MountTargetSecurityGroup
        Subnet: !Ref Subnet
        AssignPublicIP: !Ref AssignPublicIP
        InstallProxy: true
        RepositoryType: !If
          - DontInitializeRepository
          - reuseremote
          - newremote
        #  Unused parameter. Only for dependency management in calling CFTs
        DependencyValue: !If
          - RestoreFromBackup
          - !GetAtt RestoreBackup.Outputs.BackupBucket
          - No backup

Outputs:
  PyramidPublicURL:
    Value: !If
      - PublicIP
      - !Join
        - ''
        - - 'http://'
          - !GetAtt CentralInstance.Outputs.PublicDNSName
      - 'No public URL'
    Description: Pyramid Public URL
  PrivateDNSName:
    Value: !GetAtt CentralInstance.Outputs.PrivateDNSName
    Description: Instance Private DNS name
  PublicDNSName:
    Value: !GetAtt CentralInstance.Outputs.PublicDNSName
    Description: Instance Public DNS name

  VPC:
    Value: !Ref VPCID
    Description: VPC for deployment
  KeyPairName:
    Value: !Ref KeyPairName
    Description: Key Pair for instances
    
  PyramidRole:
    Value: !GetAtt BaseResourcesParameters.Outputs.PyramidRole
    Description: IAM Role for instances launched from this stack
  PyramidInstanceProfile:
    Value: !GetAtt BaseResourcesParameters.Outputs.PyramidInstanceProfile
    Description: IAM Instance Profile for instances launched from this stack
  PyramidProcessesSecurityGroup:
    Value: !GetAtt BaseResourcesParameters.Outputs.PyramidProcessesSecurityGroup
    Description: Security Group for Pyramid instances' internal communication
  MountTargetSecurityGroup:
    Value: !GetAtt BaseResourcesParameters.Outputs.MountTargetSecurityGroup
    Description: Security Group for EFS Mount Targets

  SharedFileSystem:
    Value: !GetAtt BaseResourcesParameters.Outputs.SharedFileSystem
    Description: EFS file system ID for the shared file system across the deployment

  InitialUsername:
    Value: !Ref InitialUsername
    Description: Initial Pyramid user name

  RepositoryDatabaseType:
    Value: !If
      - DatabaseTypeIsMicrosoft
      - MicrosoftSQLServer
      - PostgreSQL
    Description: RDS Database type
  RepositoryDatabaseAddress:
    Value: !Ref RDSAddress
    Description: Repository database address
  RepositoryDatabasePort:
    Value: !Ref RDSPort
    Description: Repository database port
  RepositoryDatabaseServiceName:
    Value: !Select [ 0, !Split [ ".", !Ref RDSAddress ]]
    Description: Repository database RDS Service name
  RepositoryDatabaseUsername:
    Value: !Ref RDSUsername
    Description: Repository database user name
  RepositoryDatabasePasswordARN:
    Value: !Ref RDSPasswordSecret
    Description: RDS Password in Secrets Manager
  RepositoryDatabaseName:
    Value: !Ref RDSName
    Description: Repository database schema name
  RDSSecurityGroup:
    Value: !Ref RDSSecurityGroup
    Description: Security Group access to repository database
